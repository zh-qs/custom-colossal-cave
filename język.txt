TAB: \t lub 2 spacje

GAME:

player:
  parameters:
    $list:parameter
  inventory:
    $list:item
  leftHand:
    $item|empty
  rightHand:
    $item|empty

initialMessage:
  $multilineText

items:
  $list:item

rooms:
  $list:room

start: $string

TYPES:

parameter: 
  $(name)string:
    value: $int

item:
  $(name)string:
    longName: $string
    description:
      $switch
    commands:
      $list:itemCommand

room:
  $(name)string:
    description:
      $switch
    items:
      $list:item
    entities:
      $list:entity
    commands
      $list:command

command:
  $(name)string:
    {
      <commonInstructions>
    }

itemCommand:
  $(name)string:
    {
        <commonInstructions>|<itemInstructions>
    }

switch:
  $list:(
    <boolExpr>:
      $multilineText
  )
  [jeśli żadne nie zostanie spełnione, nic nie jest wypisane]

INSTRUCTIONS:

commonInstructions:
  goto <room>
  print.
  print <string>
  println <string>
  printval <expr>
  player.<parameter> =|+=|-=|*= <expr>
  entity.<name>.<parameter> =|+=|-=|*= <expr>
  give <item>
  put <item>
  if <boolExpr> then { ... } else { ... } !!!! JEST BUG W KODZIE !!!! (wewnątrz if-a nie można itemCommand)
  call <command>

itemInstructions:
  take
  drop
  discard

EXPRESSION GRAMMAR:
  expr -> term (`+`|`-`) expr | term
  term -> factor (`*`|`/`|`%`) term | factor
  factor -> integer | ident | `(` expr `)` | `rnd`
  ident -> `entity.<name>.<parameter>` | `player.<parameter>`

BOOLEAN EXPRESSION GRAMMAR:
  exprB -> termB (`&&`|`||`) exprB | termB
  termB -> `has` <item> | `true` | `True` | `TRUE` | `false` | `False` | `FALSE` | expr (`<`|`>`|`<=`|`>=`|`==`|`!=`) expr | `(` exprB `)` 
